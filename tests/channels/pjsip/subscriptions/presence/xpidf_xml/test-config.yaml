testinfo:
    summary: 'Ensure NOTIFY bodies for xpidf+xml subscriptions are correct.'
    description: |
        'A SIPp instance subscribes to "bob" using xpidf+xml. Upon the
        first TestEvent indicating that there is an active subscription, the
        state of "Custom:bob" is changed. Each AMI event indicating that a
        state change occurred triggers another state change until all states
        have been set. The SIPp scenario expects to receive a NOTIFY message
        for each state and verifies the contents of the xpidf+xml body for
        each. If any xpidf+xml body contents do not match what is expected, the
        test fails.'

properties:
    minversion: '12.5.0'
    dependencies:
        - buildoption: 'TEST_FRAMEWORK'
        - sipp :
            version : 'v3.0'
        - python: 'twisted'
        - python: 'starpy'
        - asterisk: 'res_pjsip'
        - asterisk: 'res_pjsip_exten_state'
        - asterisk: 'res_pjsip_xpidf_body_generator'
    tags:
        - pjsip

test-modules:
    test-object:
        config-section: sipp-config
        typename: 'sipp.SIPpTestCase'
    modules:
        -
            config-section: ami-config
            typename: 'pluggable_modules.EventActionModule'

sipp-config:
    reactor-timeout: 30
    fail-on-any: True
    test-iterations:
        -
            scenarios:
                - { 'key-args': {'scenario': 'subscribe.xml', '-p': '5061'},
                    'ordered-args': ['-timeout_error'] }

ami-config:
    -
        ami-events:
            id: '0'
            conditions:
                match:
                    Event: 'TestEvent'
                    State: 'SUBSCRIPTION_STATE_SET'
                    StateText: 'ACTIVE'
                    Endpoint: 'alice'
            count: '>1'
            trigger-on-count: True
        ami-actions:
            action:
               action: 'SetVar'
               variable: 'DEVICE_STATE(Custom:bob)'
               value: 'RINGING'
    -
        ami-events:
            id: '0'
            conditions:
                match:
                    Event: 'ExtensionStatus'
                    Exten: 'bob'
                    Hint: 'Custom:bob'
                    StatusText: 'Ringing'
            count: '1'
        ami-actions:
            action:
               action: 'SetVar'
               variable: 'DEVICE_STATE(Custom:bob)'
               value: 'INUSE'
    -
        ami-events:
            id: '0'
            conditions:
                match:
                    Event: 'ExtensionStatus'
                    Exten: 'bob'
                    Hint: 'Custom:bob'
                    StatusText: 'InUse'
            count: '1'
        ami-actions:
            action:
               action: 'SetVar'
               variable: 'DEVICE_STATE(Custom:bob)'
               value: 'ONHOLD'
    -
        ami-events:
            id: '0'
            conditions:
                match:
                    Event: 'ExtensionStatus'
                    Exten: 'bob'
                    Hint: 'Custom:bob'
                    StatusText: 'Hold'
            count: '1'
        ami-actions:
            action:
               action: 'SetVar'
               variable: 'DEVICE_STATE(Custom:bob)'
               value: 'BUSY'
    -
        ami-events:
            id: '0'
            conditions:
                match:
                    Event: 'ExtensionStatus'
                    Exten: 'bob'
                    Hint: 'Custom:bob'
                    StatusText: 'Busy'
            count: '1'
        ami-actions:
            action:
               action: 'SetVar'
               variable: 'DEVICE_STATE(Custom:bob)'
               value: 'UNAVAILABLE'
    -
        ami-events:
            id: '0'
            conditions:
                match:
                    Event: 'ExtensionStatus'
                    Exten: 'bob'
                    Hint: 'Custom:bob'
                    StatusText: 'Unavailable'
            count: '1'
        ami-actions:
            action:
               action: 'SetVar'
               variable: 'DEVICE_STATE(Custom:bob)'
               value: 'NOT_INUSE'
    -
        ami-events:
            id: '0'
            conditions:
                match:
                    Event: 'ExtensionStatus'
                    Exten: 'bob'
                    Hint: 'Custom:bob'
                    StatusText: 'Idle'
            count: '1'
