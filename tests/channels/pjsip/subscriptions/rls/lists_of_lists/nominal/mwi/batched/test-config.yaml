testinfo:
    summary: 'Ensure that notification batching only occurs at topmost list level.'
    description: |
        'Two lists are configured. mail_list_a contains mail_list_b within it. mail_list_a
         is configured not to have notification batching. mail_list_b is configured to have
         notification batching. Since mail_list_a is the topmost list, notification batching
         should not occur. The way that this will be tested is to do the following.
         * A SIPp scenario subscribes to mail_list_a.
         * We perform two rapid state changes.
         * We ensure that both state changes result in individual NOTIFY requests from Asterisk.'

properties:
    minversion: '13.0.0'
    dependencies:
        - buildoption: 'TEST_FRAMEWORK'
        - python: 'twisted'
        - python: 'starpy'
        - python: 'yappcap'
        - python: 'lxml'
        - asterisk: 'res_pjsip'
        - asterisk: 'res_pjsip_pubsub'
        - asterisk: 'res_mwi_external'
        - asterisk: 'res_mwi_external_ami'
    tags:
        - rls
        - pjsip
        - mwi_external

test-modules:
    add-test-to-search-path: 'True'
    add-to-search-path:
        -
            'tests/channels/pjsip/subscriptions/rls'
    test-object:
        config-section: 'test-case-config'
        typename: 'sipp.SIPpTestCase'
    modules:
        -
            config-section: 'test-config'
            typename: 'rls_test.RLSTest'
        -
            typename: 'driver.TestDriver'

test-case-config:
    test-iterations:
        -
            scenarios:
                - { 'target': '127.0.0.1:5061', 'key-args': {'scenario': 'subscribe.xml', '-i': '127.0.0.1', '-p': '5062', '-s': 'mail_list_a'} }

test-config:
    list-name: 'mail_list_a'
    packets:
        -
            full-state: True
            resources: {
                'mail_list_b': {
                    'type': 'Multipart', 'state': 'active', 'sublist': {
                        'alice': {'type': 'MWI', 'state': 'active', 'voice_message': '0/0 (0/0)', 'messages_waiting': 'no'},
                        'bob': {'type': 'MWI', 'state': 'active', 'voice_message': '0/0 (0/0)', 'messages_waiting': 'no'}
                    }
                }
            }
        -
            full-state: False
            resources: {
                'mail_list_b': {
                    'type': 'Multipart', 'state': 'active', 'sublist': {
                        'alice': {'type': 'MWI', 'state': 'active', 'voice_message': '1/0 (0/0)', 'messages_waiting': 'yes'},
                    }
                }
            }
        -
            full-state: False
            resources: {
                'mail_list_b': {
                    'type': 'Multipart', 'state': 'active', 'sublist': {
                        'bob': {'type': 'MWI', 'state': 'active', 'voice_message': '1/0 (0/0)', 'messages_waiting': 'yes'}
                    }
                }
            }
