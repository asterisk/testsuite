
[default]

exten => test_variable,1,NoOp()
same => n,Set(aor=${LOCAL(ARG1)})
same => n,Set(field=${LOCAL(ARG2)})
same => n,Set(expected=${LOCAL(ARG3)})
same => n,Verbose(1, Calling PJSIP_AOR for AOR ${aor}, field ${field})
same => n,GotoIf($["${PJSIP_AOR(${aor},${field})}"="${expected}"]?pass)
same => n,UserEvent(Result, Status: failed, Message: ${aor}, ${field} did not match expected value ${expected} - actual ${PJSIP_AOR(${aor},${field})})
same => n(pass),NoOp()
same => n,Return()

exten => s,1,NoOp()
same => n,Answer()

; Test Alice's (dynamic registration) properties
same => n,GoSub(default,test_variable,1(alice,contact,alice\;@81363c8ccd1bbe394538018e5bee371f))
same => n,GoSub(default,test_variable,1(alice,authenticate_qualify,false))
same => n,GoSub(default,test_variable,1(alice,default_expiration,30))
same => n,GoSub(default,test_variable,1(alice,mailboxes,))
same => n,GoSub(default,test_variable,1(alice,max_contacts,1))
same => n,GoSub(default,test_variable,1(alice,maximum_expiration,7200))
same => n,GoSub(default,test_variable,1(alice,minimum_expiration,5))
same => n,GoSub(default,test_variable,1(alice,outbound_proxy,))
same => n,GoSub(default,test_variable,1(alice,qualify_frequency,0))
same => n,GoSub(default,test_variable,1(alice,remove_existing,false))
same => n,GoSub(default,test_variable,1(alice,support_path,false))

; Test Bob's (static contact) properties
same => n,GoSub(default,test_variable,1(bob,contact,bob@@sip:1000@127.0.0.1))
same => n,GoSub(default,test_variable,1(bob,authenticate_qualify,false))
same => n,GoSub(default,test_variable,1(bob,default_expiration,3600))
same => n,GoSub(default,test_variable,1(bob,mailboxes,))
same => n,GoSub(default,test_variable,1(bob,max_contacts,0))
same => n,GoSub(default,test_variable,1(bob,maximum_expiration,7200))
same => n,GoSub(default,test_variable,1(bob,minimum_expiration,60))
same => n,GoSub(default,test_variable,1(bob,outbound_proxy,))
same => n,GoSub(default,test_variable,1(bob,qualify_frequency,0))
same => n,GoSub(default,test_variable,1(bob,remove_existing,false))
same => n,GoSub(default,test_variable,1(bob,support_path,false))

same => n,UserEvent(Result, Status: passed)
same => n,Hangup()
